#include "STD_TYPES.h"
#include "BIT_MATH.h"

#include "EXTI_interface.h"
#include "EXTI_private.h"
#include "EXTI_config.h"
#include "EXTI_register.h"


void EXTI_voidInt0Init(u8 Copy_u8SenseControl)
{
	/*set sense control for INT0*/
	switch (Copy_u8SenseControl)
	{
	case (Sense_LowLevel): /*for low level :ISC01=0,ISC00=0*/
				CLR_BIT(MCUCR,MCUCR_ISC01);
				CLR_BIT(MCUCR,MCUCR_ISC00);
	break;
	case (Sense_OnChange): /*for on change :ISC01=0,ISC00=1*/
				CLR_BIT(MCUCR,MCUCR_ISC01);
				SET_BIT(MCUCR,MCUCR_ISC00);
	break;
	case (Sense_FallingEdge): /*for falling edge :ISC01=1,ISC00=0*/
				SET_BIT(MCUCR,MCUCR_ISC01);
				CLR_BIT(MCUCR,MCUCR_ISC00);
	break;
	case (Sense_RisingEdge): /*for rising edge :ISC01=1,ISC00=1*/
				SET_BIT(MCUCR,MCUCR_ISC01);
				SET_BIT(MCUCR,MCUCR_ISC00);
	break;
	}
	/*peripheral (specific) interrupt enable*/
	SET_BIT(GICR,GICR_INT0);
}

void EXTI_voidInt1Init(u8 Copy_u8SenseControl)
{
	/*set sense control for INT1*/
	switch (Copy_u8SenseControl)
	{
	case (Sense_LowLevel): /*for low level :ISC11=0,ISC10=0*/
				CLR_BIT(MCUCR,MCUCR_ISC11);
				CLR_BIT(MCUCR,MCUCR_ISC10);
	break;
	case (Sense_OnChange): /*for on change :ISC11=0,ISC10=1*/
				CLR_BIT(MCUCR,MCUCR_ISC11);
				SET_BIT(MCUCR,MCUCR_ISC10);
	break;
	case (Sense_FallingEdge): /*for falling edge :ISC11=1,ISC10=0*/
				SET_BIT(MCUCR,MCUCR_ISC11);
				CLR_BIT(MCUCR,MCUCR_ISC10);
	break;
	case (Sense_RisingEdge): /*for rising edge :ISC11=1,ISC10=1*/
				SET_BIT(MCUCR,MCUCR_ISC11);
				SET_BIT(MCUCR,MCUCR_ISC10);
	break;
	}
	/*peripheral (specific) interrupt enable*/
	SET_BIT(GICR,GICR_INT1);
}

void EXTI_voidInt2Init(u8 Copy_u8SenseControl)
{
	/*set sense control for INT2*/
	switch(Copy_u8SenseControl)
	{
	case (Sense_FallingEdge):
				CLR_BIT(MCUCSR,MCUCSR_ISC2);
	break;
	case (Sense_RisingEdge):
				SET_BIT(MCUCSR,MCUCSR_ISC2);
	break;
	}
	/*peripheral (specific) interrupt enable*/
	SET_BIT(GICR,GICR_INT2);
}
